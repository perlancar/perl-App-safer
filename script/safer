#!perl

use 5.010001;
use strict;
use warnings;

use Getopt::Long;

# AUTHORITY
# DATE
# DIST
# VERSION

my %Opts = (
    encoding => "alphanum_kebab",
);

sub parse_cmdline {
    Getopt::Long::Configure("gnu_getopt", "no_ignore_case");
    my $res = GetOptions(
        'encoding|e=s'       => \$Opts{encoding},
        'help|h'           => sub {
            print <<USAGE;
Usage:
  safer [OPTIONS]... [FILENAME]
  safer --help
Options:
  --encoding, -e
For more details, see the manpage/documentation.
USAGE
            exit 0;
        },
    );
    exit 99 if !$res;
}

sub run {
    require Text::Safer;
    while (defined(my $line = <>)) {
        chomp $line;
        say Text::Safer::encode_safer($line, $Opts{encoding});
    }
}

# MAIN

parse_cmdline();
run();

1;
# ABSTRACT: Convert text using one of safer (more restricted) encodings
# PODNAME:

=head1 SYNOPSIS

 safer [OPTIONS] [FILENAME]


=head1 DESCRIPTION


=head1 OPTIONS

=over

=item * --encoding, -e

=back


=head1 EXIT CODES

0 on success.

255 on I/O error.

99 on command-line options error.


=head1 FAQ


=head1 SEE ALSO

=cut
